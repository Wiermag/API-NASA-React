{"version":3,"sources":["components/GetAPI.js","components/Header.js","components/Image.js","App.js","index.js"],"names":["NasaContext","createContext","GetAPI","props","useState","dataNasa","setDataNasa","useEffect","getNasaAPI","a","fetch","response","json","data","photos","Provider","value","children","Header","useContext","background","map","item","img_src","Math","floor","random","setRandomBackground","style","backgroundImage","marginBottom","interval","setInterval","randomBackground","clearInterval","className","Images","arrayImg","visible","setVisible","images","key","id","alt","src","length","slice","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAEMA,EAAcC,0BAEdC,EAAS,SAACC,GAAW,IAAD,EAEUC,mBAAS,IAFnB,mBAEfC,EAFe,KAELC,EAFK,KAIlBC,qBAAU,WACNC,MACF,IAGF,IACMA,EAAU,uCAAG,8BAAAC,EAAA,sEACQC,MAAM,oFAAD,OAFhB,6CACG,cACTC,EADS,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAGfP,EAAYO,EAAKC,QAHF,2CAAH,qDAMhB,OACI,kBAACd,EAAYe,SAAb,CAAsBC,MAAO,CAACX,EAASC,IAClCH,EAAMc,WCnBjBC,EAAS,WAAO,IAAD,EACEC,qBAAWnB,GACxBoB,EAFW,oBAEWC,KAAI,SAACC,GAAD,OAAUA,EAAKC,WAASC,KAAKC,MAAM,EAAAD,KAAKE,UAAsB,GAF7E,EAI+BtB,mBAASgB,GAJxC,mBAIQO,GAJR,WAKXC,EAAQ,CAACC,gBAAgB,OAAD,OAAST,EAAT,KACfU,aAAc,QAU7B,OAPAvB,qBAAU,WACN,IAAMwB,EAAWC,aAAY,WAC3BL,GAAoB,SAAAM,GAAgB,OAAIA,EAAmB,CAACT,KAAKC,MAAM,EAAAD,KAAKE,UAAuB,QAClG,KACH,OAAO,kBAAMQ,cAAcH,MAC1B,IAGJ,oCACG,6BAASI,UAAU,4BAA4BP,MAAOA,GAC9C,kDACE,yBAAKO,UAAU,WACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,iBARzB,OClBFC,EAAS,WAAO,IAAD,EACEjB,qBAAWnB,GAAvBqC,EADU,sBAEajC,mBAAS,GAFtB,mBAEVkC,EAFU,KAEDC,EAFC,KASXC,EAAUH,EAAShB,KAAI,SAAAC,GACrB,OACQ,wBAAImB,IAAKnB,EAAKoB,IACV,yBAAMC,IAAKrB,EAAKoB,GAAIE,IAAKtB,EAAKC,UAC9B,kCAMpB,OACQ,6BAAMe,EAAUD,EAASQ,OACrB,6BAASV,UAAU,6BACf,uCACA,yBAAKA,UAAU,kBACdK,EAAOM,MAAM,EAAER,IAEhB,8BAAM,4BAAQH,UAAU,MAAMY,QAtB7B,WACbR,EAAWD,EAAU,KAqBH,eAEG,OCxBvBU,EAAM,WAER,OACI,kBAAC,EAAD,KACG,kBAAC,EAAD,MACA,kBAAC,EAAD,QCRXC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.cc246346.chunk.js","sourcesContent":["import React,{ useEffect, useState, createContext } from \"react\";\r\n\r\nconst NasaContext = createContext();\r\n\r\nconst GetAPI = (props) => {\r\n    \r\n    const [dataNasa, setDataNasa] = useState([]);\r\n  \r\n        useEffect(() => {\r\n            getNasaAPI();\r\n        },[]); \r\n        \r\n      \r\n        const API_KEY = 'JPetPlsS4kTmHUS9WXPylAejlaraORAj5fckLEtQ';\r\n        const getNasaAPI = async () => {\r\n            const response = await fetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&api_key=${API_KEY}`);\r\n            const data = await response.json();\r\n            setDataNasa(data.photos);\r\n           \r\n        }\r\n        return (\r\n            <NasaContext.Provider value={[dataNasa,setDataNasa]}>\r\n                {props.children}\r\n            </NasaContext.Provider>\r\n        );\r\n}\r\n\r\nexport {\r\n    GetAPI, NasaContext\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { NasaContext } from './GetAPI';\r\n\r\nconst Header = () => {   \r\n    const [dataNasa] = useContext(NasaContext);  \r\n    const background = dataNasa.map((item) => item.img_src)[Math.floor(Math.random() * (10 - 1)) +1];\r\n\r\n    const [randomBackground, setRandomBackground] = useState(background);\r\n    const style = {backgroundImage: `url(${background})`,\r\n                   marginBottom: 20 +\"px\",\r\n}\r\n                  \r\n    useEffect(() => {\r\n        const interval = setInterval(() => { \r\n          setRandomBackground(randomBackground => randomBackground + [Math.floor(Math.random() * (10 - 1)) + 1] );\r\n        }, 4000);\r\n        return () => clearInterval(interval);\r\n      }, []);\r\n   \r\n    return (\r\n     <>\r\n        <section className=\"welcome-section slideLeft\" style={style} >\r\n                <h1>NASA API Challenge</h1>  \r\n                  <div className=\"loading\">\r\n                  <div className=\"loading-dot\"></div>\r\n                  <div className=\"loading-dot\"></div>\r\n                  <div className=\"loading-dot\"></div>\r\n                  <div className=\"loading-dot\"></div>\r\n                  <div className=\"loading-dot\"></div>\r\n                  <div className=\"loading-dot\"></div>\r\n            </div>,\r\n        </section>\r\n    </> \r\n    )\r\n} \r\n\r\nexport {\r\n    Header \r\n}","import React, { useContext, useState } from \"react\";\r\nimport { NasaContext } from './GetAPI';\r\n\r\nconst Images = () => {\r\n    const [arrayImg] = useContext(NasaContext);\r\n    const [visible, setVisible] = useState(6);\r\n    \r\n    const showMore = () =>  {\r\n        setVisible(visible + 6);\r\n    }\r\n    \r\n\r\n    const images =  arrayImg.map(item =>  {\r\n            return (\r\n                    <li key={item.id}>\r\n                        <img  alt={item.id} src={item.img_src}/>\r\n                        <div></div>\r\n                    </li>\r\n                );\r\n    });\r\n                \r\n   \r\n    return (\r\n            <div>{visible < arrayImg.length ?\r\n                <section className=\"gallery-section slideLeft\">\r\n                    <h2>Gallery</h2>\r\n                    <div className=\"grid-container\">\r\n                    {images.slice(0,visible)}\r\n                    </div>\r\n                    <span><button className=\"btn\" onClick={showMore}>LOAD MORE</button></span>\r\n\r\n                </section> : null}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport { \r\n    Images\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport { Header } from \"./components/Header\";\r\nimport { Images } from \"./components/Image\";\r\nimport { GetAPI } from \"./components/GetAPI\"\r\n\r\nconst App = () => {\r\n    \r\n    return (\r\n        <GetAPI>\r\n           <Header/>\r\n           <Images/>\r\n        </GetAPI>\r\n    ); \r\n}\r\nexport {\r\n    App\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport  { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}